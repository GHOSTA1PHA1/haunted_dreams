name: Deploy static site to haunteddreams.fun
on:
  push: { branches: [ main ] }
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
    steps:
      - uses: actions/checkout@v4

      # Write private key from secret (strip CR just in case) and show fingerprint
      - name: Write SSH key
        shell: bash
        run: |
          umask 077
          printf '%s' "${{ secrets.SSH_KEY }}" | tr -d '\r' > key
          echo "Key fingerprint on runner:"
          ssh-keygen -lf key

      - name: Trust server host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

      # Try a tiny SSH first with very verbose logs. Keep going even if it fails.
      - name: Debug SSH connectivity (-vvv)
        continue-on-error: true
        run: |
          ssh -vvv -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes -i key \
            "$SSH_USER@$SSH_HOST" 'echo connected && whoami && id'

      - name: Ensure remote dir exists
        run: |
          ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes -i key \
            "$SSH_USER@$SSH_HOST" "install -d -m 755 '$DEPLOY_PATH'"

      - name: (Optional) Generate WebP if PNGs present
        run: |
          sudo apt-get update -y
          sudo apt-get install -y webp
          cd assets || exit 0
          [ -f hero.png ]   && cwebp -q 82 -resize 1600 0 hero.png   -o hero.webp || true
          [ -f banner.png ] && cwebp -q 82 -resize 1600 0 banner.png -o banner.webp || true

      - name: Deploy via rsync
        env:
          RSYNC_RSH: ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes -i key
        run: |
          rsync -avz --delete \
            --exclude '.git' --exclude '.github' \
            -e "$RSYNC_RSH" ./ "$SSH_USER@$SSH_HOST:$DEPLOY_PATH/"
